@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;


body{
    font-family: "Lato", "sans-serif";
    background-color: #0F1218;
}

.logo{
  display: inline-flex;
  height: 3rem/* 48px */;
  min-height: 3rem/* 48px */;
  flex-shrink: 0;
  cursor: pointer;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, 0.5rem/* 8px */);
  border-color: transparent;
  padding-left: 1rem/* 16px */;
  padding-right: 1rem/* 16px */;
  text-align: center;
  font-size: 0.875rem/* 14px */;
  line-height: 1em;
  gap: 0.5rem/* 8px */;
  font-weight: 600;
  background-color: transparent;
}

.logo:hover{
  background-color: transparent;
  border: 1px solid transparent;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--rounded-box, 1rem/* 16px */);
}
.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}
.card.image-full {
  display: grid;
}
.card.image-full:before {
  position: relative;
  content: "";
  z-index: 10;
  border-radius: var(--rounded-box, 1rem/* 16px */);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  opacity: 0.75;
}
.card.image-full:before,
  .card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.card.image-full:before,
  .card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.card.image-full > figure img {
  height: 100%;
  object-fit: cover;
}
.card.image-full > .card-body {
  position: relative;
  z-index: 20;
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
}
.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}
.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}
.card:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.card.bordered {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
}
.card.compact .card-body {
  padding: 1rem/* 16px */;
  font-size: 0.875rem/* 14px */;
  line-height: 1.25rem/* 20px */;
}
.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}

.c {
  position: relative;
  display: flex;
  flex-direction: row;
  border-radius: 8px;
}
.c:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.c figure {
  display: flex;
  align-items: center;
  justify-content: center;
}
.c.image-full {
  display: grid;
}
.c.image-full:before {
  position: relative;
  content: "";
  z-index: 10;
  border-radius: 8px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  opacity: 0.75;
}
.c.image-full:before,
  .c.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.c.image-full:before,
  .c.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.c.image-full > figure img {
  height: 100%;
  object-fit: cover;
}
.c.image-full > .card-body {
  position: relative;
  z-index: 20;
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
}
.c :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: 8px;
  border-start-end-radius:  8px;
  border-end-start-radius: 8px;
  border-end-end-radius: 8px;
}
.c :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: 8px;
  border-start-end-radius: 8px;
  border-end-start-radius: 8px;
  border-end-end-radius: 8px;
}
.c:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.c.bordered {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
}
.c.compact .card-body {
  padding: 1rem/* 16px */;
  font-size: 0.875rem/* 14px */;
  line-height: 1.25rem/* 20px */;
}
.c.image-full :where(figure) {
  overflow: hidden;
  border-radius: 8px;
}

::-webkit-scrollbar-track {
    background: transparent;
}

::-webkit-scrollbar {
    width: 12px;
    background-color: transparent;
    border-left: 2px solid transparent;
    box-shadow: 0px 0px 21px 0px #5045e42d inset;
}

::-webkit-scrollbar-thumb {
    background-color: #000;
    box-shadow: 0px 0px 10px 0px #545A69 inset;
    border-radius: 8px;
}

::selection {
    background-color: #5045e42d;
    opacity: 0.2;
    color: #A6ADBB;
}

.input,.select {
  flex-shrink: 1;
  appearance: none;
  height: 3rem/* 48px */;
  padding-left: 1rem/* 16px */;
  padding-right: 1rem/* 16px */;
  font-size: 0.875rem/* 14px */;
  font-size: 1rem/* 16px */;
  line-height: 1.25rem/* 20px */;
  line-height: 2;
  line-height: 1.5rem/* 24px */;
  border-radius: var(--rounded-btn, 0.5rem/* 8px */);
  border-width: 1px;
  border-color: #2D323C;
  --tw-bg-opacity: 1;
  background-color: #1b1b3c95;
}
.input[type="number"]::-webkit-inner-spin-button,
.input-md[type="number"]::-webkit-inner-spin-button {
  margin-top: -1rem/* -16px */;
  margin-bottom: -1rem/* -16px */;
  margin-inline-end: -1rem/* -16px */;
}
.input input {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
  background-color: transparent;
}
.input input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}
.input:focus,
  .input:focus-within {
  box-shadow: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}
.input:focus,
  .input:focus-within {
  box-shadow: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}
.input:has(> input[disabled]),
  .input-disabled,
  .input:disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
.input:has(> input[disabled]),
  .input-disabled,
  .input:disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
.input:has(> input[disabled]),
  .input-disabled,
  .input:disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
.input:has(> input[disabled])::placeholder,
  .input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.input:has(> input[disabled])::placeholder,
  .input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.input:has(> input[disabled])::placeholder,
  .input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed;
}
.input::-webkit-date-and-time-value {
  text-align: inherit;
}
.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem/* 28px */;
  width: 24rem/* 384px */;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  padding-left: 2rem/* 32px */;
  direction: ltr;
}
.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  left: 0.5rem/* 8px */;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem/* 12px */;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  left: 1.25rem/* 20px */;
  top: 50%;
  height: 0.5rem/* 8px */;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

.error {
    color: #fc8181;
    font-size: 0.75rem;
    text-align: left;
    margin-top: 0.25rem;
}

input.input-error,
select.input-error{
    border-color: #fc8181;
}

.stat-figure {
  grid-column-start: 1;
  grid-row: span 3 / span 3;
  grid-row-start: 1;
  place-self: center;
  justify-self: center;
}

.btn-custom{
  background-color: #5045e42d;
}

.btn-custom:hover{
  background-color: #4F45E4;
  color: #A4B4FB;
}

.btn-red{
  background-color: rgba(255, 0, 0, 0.313);
}

.btn-red:hover{
  background-color: rgba(255, 0, 0, 0.843);
}


.btn-blanche{
  background-color: #ffffff73;
  color: #0F1218;
}

.btn-blanche:hover{
  background-color: hsla(0, 0%, 100%, 0.843);
  color: #0F1218;
}

.file-input {
  height: 3rem/* 48px */;
  flex-shrink: 1;
  padding-inline-end: 1rem/* 16px */;
  font-size: 0.875rem/* 14px */;
  font-size: 1rem/* 16px */;
  line-height: 1.25rem/* 20px */;
  line-height: 2;
  line-height: 1.5rem/* 24px */;
  overflow: hidden;
  border-radius: var(--rounded-btn, 0.5rem/* 8px */);
  border-width: 1px;
  border-color: #2D323C;
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: #1b1b3c95;
}
.file-input::file-selector-button {
  margin-inline-end: 1rem/* 16px */;
  display: inline-flex;
  height: 100%;
  flex-shrink: 0;
  cursor: pointer;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem/* 16px */;
  padding-right: 1rem/* 16px */;
  text-align: center;
  font-size: 0.875rem/* 14px */;
  line-height: 1.25rem/* 20px */;
  line-height: 1em;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: #4F45E4;
  font-weight: 600;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: #A4B4FB;
  text-decoration-line: none;
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
}
.file-input:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}
.file-input-disabled,
  .file-input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  --tw-text-opacity: 0.2;
}
.file-input-disabled::placeholder,
  .file-input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.file-input-disabled::file-selector-button, .file-input[disabled]::file-selector-button {
  --tw-border-opacity: 0;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.2;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}


.ql-toolbar.ql-snow {
    border: 1px solid #2D323C;
    box-sizing: border-box;
    font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
    padding: 8px;
}

.ql-editor{
  background: #1b1b3c95;
  overflow: scroll;
  height: 8rem !important;
}

.ql-blank{
  border: 1px solid #2D323C;
}

.ql-container.ql-snow {
    border: 1px solid #2D323C;
}

::-webkit-scrollbar-corner {
  background: #1B1B3D;
}

.ql-snow .ql-stroke {
    fill: none;
    stroke: #444;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 2;
}

.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options {
    border-color: #2D323C;
}


.ql-snow .ql-picker.ql-expanded .ql-picker-options {
    display: block;
    margin-top: -1px;
    top: 100%;
    z-index: 1;
}

.ql-toolbar.ql-snow .ql-picker-options {
    border: 1px solid transparent;
    box-shadow: rgba(0, 0, 0, 0.2) 0 2px 8px;
}

.ql-snow .ql-picker-options {
    background-color: #0F1218;
    display: none;
    min-width: 100%;
    padding: 4px 8px;
    position: absolute;
    white-space: nowrap;
}

.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label {
    border-color: #2D323C;
}

.ql-snow .ql-picker.ql-expanded .ql-picker-label {
    color: #2D323C;
    z-index: 2;
}

.ql-toolbar.ql-snow .ql-picker-label {
    border: 1px solid transparent;
}

.ql-snow .ql-picker-label {
    cursor: pointer;
    display: inline-block;
    height: 100%;
    padding-left: 8px;
    padding-right: 2px;
    position: relative;
    width: 100%;
}